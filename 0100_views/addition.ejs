<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>TZ todo</title>
  <link rel="stylesheet" href="/css/3000.css" />
  <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
  <style>
    * {
      box-sizing: border-box;
    }

    html, body {
      margin: 0;
      padding: 0;
      height: 100%;
      font-family: 'Segoe UI', sans-serif;
    }

    body.light-theme {
      background-color: #f2f2f2;
      color: #000;
    }

    body.light-theme .container {
      background-color: #f2f2f2;
    }

    body.light-theme .todo-btn {
      background-color: #fff;
      color: #333;
      border-color: #ccc;
    }

    body.light-theme .top-buttons button {
      background-color: #ccc;
      color: #000;
    }

    body.light-theme #admob {
      background-color: #000;
      color: white;
    }

    body.dark-theme {
      background-color: #222;
      color: #fff;
    }

    body.dark-theme .container {
      background-color: #222;
    }

    body.dark-theme .todo-btn {
      background-color: #333;
      color: #fff;
      border-color: #666;
    }

    body.dark-theme .top-buttons button {
      background-color: #444;
      color: white;
    }

    body.dark-theme #admob {
      background-color: #000;
      color: white;
    }

    .container {
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: stretch;
      padding: 16px;
      min-height: 100vh;
      padding-bottom: 80px;
    }

    .top-buttons {
      display: grid;
      grid-template-columns: auto 1fr auto;
      gap: 8px;
      margin-bottom: 10px;
    }

    .top-buttons input {
      font-size: 1rem;
      padding: 0.6em 0.8em;
      border-radius: 6px;
      border: 1px solid #ccc;
      width: 100%;
    }

    .top-buttons button {
      font-size: 1rem;
      border: none;
      border-radius: 6px;
      line-height: 1.2;
      padding: 0.6em 0.8em;
      min-height: 44px;
      white-space: nowrap;
    }

    #todoButtons {
      display: grid;
      gap: 8px;
    }

    #todoButtons.cols-1 {
      grid-template-columns: 1fr;
    }

    #todoButtons.cols-2 {
      grid-template-columns: 1fr 1fr;
    }

    #todoButtons.cols-3 {
      grid-template-columns: 1fr 1fr 1fr;
    }

    .todo-btn {
      min-height: 44px;
      padding: 0.6em 0.8em;
      border-radius: 6px;
      border: 1px solid;
      line-height: 1.2;
      cursor: grab;
    }

    .todo-btn.chosen,
    .todo-btn.dragging {
      background-color: #bbb !important;
    }

    #settingsPanel {
      margin-top: 20px;
    }

    .hidden {
      display: none;
    }

    #admob {
      position: fixed;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 60px;
      text-align: center;
      line-height: 60px;
      font-size: 14px;
      z-index: 1000;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="top-buttons">
      <button onclick="addNewTodo()">➕ 추가</button>
      <input type="text" id="newTodo" placeholder="새 할 일 입력" />
      <button id="settingsBtn" onclick="goToSettings()">⚙️ 설정</button>
    </div>

    <div id="todoButtons"></div>

    <div id="settingsPanel" class="hidden">
      <button onclick="clearTodos()">모두 삭제</button>
    </div>
  </div>

  <div id="admob">광고 자리</div>

  <script>
    function addNewTodo() {
      const input = document.getElementById("newTodo");
      const value = input.value.trim();
      if (!value) return;

      const list = JSON.parse(localStorage.getItem("todos")) || [];
      list.push(value);
      localStorage.setItem("todos", JSON.stringify(list));

      input.value = "";
      renderTodos();
    }

    function clearTodos() {
      localStorage.removeItem("todos");
      renderTodos();
    }

    function renderTodos() {
      const list = JSON.parse(localStorage.getItem("todos")) || [];
      const container = document.getElementById("todoButtons");
      container.innerHTML = "";

      const colCount = parseInt(localStorage.getItem('columnCount')) || 1;
      const fontSize = parseInt(localStorage.getItem('fontSize') || '3');
      const textAlign = localStorage.getItem('textAlign') || 'center';

      const textSize = fontSize * 0.5;
      const padSize = textSize * 0.4;

      container.className = '';
      container.classList.add(`cols-${colCount}`);

      list.forEach((todo) => {
        const btn = document.createElement("button");
        btn.className = "todo-btn";
        btn.textContent = todo;

        btn.style.fontSize = `${textSize}rem`;
        btn.style.paddingTop = `${padSize}rem`;
        btn.style.paddingBottom = `${padSize}rem`;
        btn.style.textAlign = textAlign;

        container.appendChild(btn);
      });

      Sortable.create(container, {
        animation: 150,
        delay: 300,
        delayOnTouchOnly: true,
        ghostClass: 'dragging',
        chosenClass: 'chosen',
        onEnd: () => {
          const reordered = [];
          const children = container.querySelectorAll('.todo-btn');
          children.forEach(child => {
            reordered.push(child.textContent);
          });
          localStorage.setItem("todos", JSON.stringify(reordered));
        }
      });
    }

    function goToSettings() {
      window.location.href = '/setting';
    }

    function applySettings() {
      const theme = localStorage.getItem('theme') || 'light';
      document.body.classList.remove('light-theme', 'dark-theme');
      document.body.classList.add(theme + '-theme');
    }

    applySettings();
    renderTodos();
  </script>
</body>
</html>